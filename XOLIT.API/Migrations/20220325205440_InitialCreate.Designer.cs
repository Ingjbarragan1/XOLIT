// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using XOLIT.API.Database;

namespace XOLIT.API.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220325205440_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "6.0.0-preview.5.21301.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("XOLIT.API.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroIdentificacion")
                        .HasColumnType("int");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("cliente");
                });

            modelBuilder.Entity("XOLIT.API.Models.DetalleFactura", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CantidadUnidades")
                        .HasColumnType("int");

                    b.Property<int?>("ProductoId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorTotalCompra")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorUnitarioSinIVA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("valorUnitarioconIVA")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("ProductoId");

                    b.ToTable("detalleFactura");
                });

            modelBuilder.Entity("XOLIT.API.Models.Factura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int?>("DetalleFacturaid")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaVenta")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SubTotalSinIVA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalPrecioVenta")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("DetalleFacturaid");

                    b.ToTable("factura");
                });

            modelBuilder.Entity("XOLIT.API.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CantidadUnidadesIventario")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PorcentajeIVAAplicado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorVentaConIVA")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("producto");
                });

            modelBuilder.Entity("XOLIT.API.Models.DetalleFactura", b =>
                {
                    b.HasOne("XOLIT.API.Models.Producto", null)
                        .WithMany("DetalleFacturas")
                        .HasForeignKey("ProductoId");
                });

            modelBuilder.Entity("XOLIT.API.Models.Factura", b =>
                {
                    b.HasOne("XOLIT.API.Models.Cliente", null)
                        .WithMany("factura")
                        .HasForeignKey("ClienteId");

                    b.HasOne("XOLIT.API.Models.DetalleFactura", null)
                        .WithMany("factura")
                        .HasForeignKey("DetalleFacturaid");
                });

            modelBuilder.Entity("XOLIT.API.Models.Cliente", b =>
                {
                    b.Navigation("factura");
                });

            modelBuilder.Entity("XOLIT.API.Models.DetalleFactura", b =>
                {
                    b.Navigation("factura");
                });

            modelBuilder.Entity("XOLIT.API.Models.Producto", b =>
                {
                    b.Navigation("DetalleFacturas");
                });
#pragma warning restore 612, 618
        }
    }
}
